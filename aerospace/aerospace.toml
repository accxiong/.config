# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 12
inner.vertical = 12
outer.left = 12
outer.bottom = 12
outer.top = 12
outer.right = 12
# inner.horizontal = 0
# inner.vertical =   0
# outer.left =       0
# outer.bottom =     0
# outer.top =        0
# outer.right =      0

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
#                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
#                   sectionSign (ISO keyboards only, european keyboards only)
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut
# (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-minus = 'resize smart -50'
alt-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
# alt-6 = 'workspace 6'
# alt-7 = 'workspace 7'
# alt-8 = 'workspace 8'
# alt-9 = 'workspace 9'
# alt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
# alt-b = 'workspace B'
# alt-c = 'workspace C'
# alt-d = 'workspace D'
alt-e = 'workspace E'
# alt-f = 'workspace F'
# alt-g = 'workspace G'
# alt-i = 'workspace I'
# alt-m = 'workspace M'
# alt-n = 'workspace N'
# alt-o = 'workspace O'
# alt-p = 'workspace P'
alt-q = 'workspace Q'
alt-r = 'workspace R'
# alt-s = 'workspace S'
# alt-t = 'workspace T'
# alt-u = 'workspace U'
# alt-v = 'workspace V'
alt-w = 'workspace W'
# alt-x = 'workspace X'
# alt-y = 'workspace Y'
# alt-z = 'workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
alt-shift-5 = 'move-node-to-workspace 5'
# alt-shift-6 = 'move-node-to-workspace 6'
# alt-shift-7 = 'move-node-to-workspace 7'
# alt-shift-8 = 'move-node-to-workspace 8'
# alt-shift-9 = 'move-node-to-workspace 9'
# alt-shift-a = 'move-node-to-workspace A'
# alt-shift-b = 'move-node-to-workspace B'
# alt-shift-c = 'move-node-to-workspace C'
# alt-shift-d = 'move-node-to-workspace D'
alt-shift-e = 'move-node-to-workspace E'
# alt-shift-f = 'move-node-to-workspace F'
# alt-shift-g = 'move-node-to-workspace G'
# alt-shift-i = 'move-node-to-workspace I'
# alt-shift-m = 'move-node-to-workspace M'
# alt-shift-n = 'move-node-to-workspace N'
# alt-shift-o = 'move-node-to-workspace O'
# alt-shift-p = 'move-node-to-workspace P'
alt-shift-q = 'move-node-to-workspace Q'
alt-shift-r = 'move-node-to-workspace R'
# alt-shift-s = 'move-node-to-workspace S'
# alt-shift-t = 'move-node-to-workspace T'
# alt-shift-u = 'move-node-to-workspace U'
# alt-shift-v = 'move-node-to-workspace V'
alt-shift-w = 'move-node-to-workspace W'
# alt-shift-x = 'move-node-to-workspace X'
# alt-shift-y = 'move-node-to-workspace Y'
# alt-shift-z = 'move-node-to-workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

down = 'volume down'
up = 'volume up'
shift-down = ['volume set 0', 'mode main']

# [[on-window-detected]]
#     check-further-callbacks = true
#     run = 'layout floating'

# 系统设置
[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
if.during-aerospace-startup = false
run = ['layout floating']

# 活动监视器
[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
if.during-aerospace-startup = false
run = ['layout floating']

# App Store
[[on-window-detected]]
if.app-id = 'com.apple.AppStore'
if.during-aerospace-startup = false
run = ['layout floating']

# finder
[[on-window-detected]]
if.app-id = 'com.apple.finder'
if.during-aerospace-startup = false
run = ['layout floating']

# 播客
[[on-window-detected]]
if.app-id = 'com.apple.podcasts'
if.during-aerospace-startup = false
run = ['layout floating']

# 微信
[[on-window-detected]]
if.app-id = 'com.tencent.xinWeChat'
if.during-aerospace-startup = false
run = ['layout floating', 'move-node-to-workspace W']

# 飞书
[[on-window-detected]]
if.app-id = 'com.electron.lark'
if.during-aerospace-startup = false
run = ['layout floating', 'move-node-to-workspace W']

# Bilibili
[[on-window-detected]]
if.app-id = 'com.bilibili.bilibiliPC'
if.during-aerospace-startup = false
run = ['layout floating', 'move-node-to-workspace W']

# 微信读书
[[on-window-detected]]
if.app-id = 'com.tencent.weread'
if.during-aerospace-startup = false
run = ['layout floating']

# 喜马拉雅
[[on-window-detected]]
if.app-id = 'com.gemd.iting'
if.during-aerospace-startup = false
run = ['layout floating']

# TickTick
[[on-window-detected]]
if.app-id = 'com.TickTick.task.mac'
if.during-aerospace-startup = false
run = ['layout floating']

# Netease Mail
[[on-window-detected]]
if.app-id = 'com.netease.macmail'
if.during-aerospace-startup = false
run = ['layout floating']

# Netease Music
[[on-window-detected]]
if.app-id = 'com.netease.163music'
if.during-aerospace-startup = false
run = ['layout floating']

# Warp
[[on-window-detected]]
if.app-id = 'dev.warp.Warp-Stable'
if.during-aerospace-startup = false
run = ['layout floating']

# xterminal
[[on-window-detected]]
if.app-id = 'cn.xterminal.www'
if.during-aerospace-startup = false
run = ['layout floating']

# QSpace
[[on-window-detected]]
if.app-id = 'com.jinghaoshe.qspace.pro'
if.during-aerospace-startup = false
run = ['layout floating']

# Kitty
[[on-window-detected]]
if.app-id = 'net.kovidgoyal.kitty'
if.during-aerospace-startup = false
run = ['layout floating']

# Fork
[[on-window-detected]]
if.app-id = 'com.DanPristupov.Fork'
if.during-aerospace-startup = false
run = ['layout floating']

# apipost
[[on-window-detected]]
if.app-id = 'com.apipost.apipost.fe.desctop.cn.8.x'
if.during-aerospace-startup = false
run = ['layout floating']

# clash
[[on-window-detected]]
if.app-id = 'io.github.clash-verge-rev.clash-verge-rev'
if.during-aerospace-startup = false
run = ['layout floating']

# flowus
[[on-window-detected]]
if.app-id = 'com.flowus.app'
if.during-aerospace-startup = false
run = ['layout floating']

# NavicatPremiumLite
[[on-window-detected]]
if.app-id = 'com.navicat.NavicatPremiumLite'
if.during-aerospace-startup = false
run = ['layout floating']

# OrbStack
[[on-window-detected]]
if.app-id = 'dev.kdrag0n.MacVirt'
if.during-aerospace-startup = false
run = ['layout floating']

# GitKraken
[[on-window-detected]]
if.app-id = 'com.axosoft.gitkraken'
if.during-aerospace-startup = false
run = ['layout floating']

# Arc
[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
if.during-aerospace-startup = false
run = ['layout floating']

# apifox
[[on-window-detected]]
if.app-id = 'cn.apifox.app'
if.during-aerospace-startup = false
run = ['layout floating']


# 日历
[[on-window-detected]]
if.app-id = 'com.apple.iCal'
if.during-aerospace-startup = false
run = ['layout floating']

# Cursor
[[on-window-detected]]
if.app-id = 'com.todesktop.230313mzl4w4u92'
if.during-aerospace-startup = false
run = ['move-node-to-workspace 1']

# VSCode
[[on-window-detected]]
if.app-id = 'com.microsoft.VSCod'
if.during-aerospace-startup = false
run = ['move-node-to-workspace 1']

# Chrome
[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = 'move-node-to-workspace 2'

# Chrome canary
[[on-window-detected]]
if.app-id = 'com.google.Chrome.canary'
run = 'move-node-to-workspace 2'

# Safari
[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = 'move-node-to-workspace E'
